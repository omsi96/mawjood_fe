[{"/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/index.js":"1","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/App.js":"2","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/AppBar.js":"3","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/routes/index.js":"4","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/Home/index.js":"5","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/Tabs.js":"6","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/ClassesList.js":"7","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/StudentList.js":"8","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/SubjectsGrid/SubjectsGrid.js":"9","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/SubjectsGrid/index.js":"10","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/ClassView/index.js":"11","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/ClassView/AttendanceModal.js":"12","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/utils/axios.js":"13"},{"size":311,"mtime":1627065919860,"results":"14","hashOfConfig":"15"},{"size":266,"mtime":1627065919858,"results":"16","hashOfConfig":"15"},{"size":1510,"mtime":1627084792564,"results":"17","hashOfConfig":"15"},{"size":526,"mtime":1627094592144,"results":"18","hashOfConfig":"15"},{"size":323,"mtime":1627086435889,"results":"19","hashOfConfig":"15"},{"size":3595,"mtime":1627090455776,"results":"20","hashOfConfig":"15"},{"size":9825,"mtime":1627092691587,"results":"21","hashOfConfig":"15"},{"size":9041,"mtime":1627159794943,"results":"22","hashOfConfig":"15"},{"size":1849,"mtime":1627087197158,"results":"23","hashOfConfig":"15"},{"size":1255,"mtime":1627085617886,"results":"24","hashOfConfig":"15"},{"size":12595,"mtime":1627165086645,"results":"25","hashOfConfig":"15"},{"size":2816,"mtime":1627168407980,"results":"26","hashOfConfig":"15"},{"size":149,"mtime":1627093984413,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ajndqf",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/index.js",[],"/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/App.js",[],"/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/AppBar.js",["63","64","65","66"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { Link, Tab } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    // flexDirection: \"column\",\n  },\n}))\n\nexport default function ButtonAppBar() {\n  const classes = useStyles()\n  const history = useHistory()\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar>\n          {/* <div className={classes.title}> */}\n          <Typography\n            style={{ cursor: 'pointer' }}\n            onClick={() => history.push('/')}\n            variant='h6'>\n            Mawjood\n          </Typography>\n          <div>\n            {/* <Button onClick={() => history.push('/subjects')} color='inherit'>\n              Subjects\n            </Button> */}\n          </div>\n          <div className={classes.title}>\n            {/* <Button color='inherit'>Classes</Button> */}\n          </div>\n\n          {/* </div> */}\n          <Button color='inherit'>Login</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/routes/index.js",[],"/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/Home/index.js",["67","68"],"import React from 'react'\r\nimport AppBar from '../AppBar'\r\nimport { Box, Button } from '@material-ui/core'\r\nimport Tabs from '../Tabs'\r\nconst index = () => {\r\n  return (\r\n    <div>\r\n      <Box component='div' p={{ xs: 5, sm: 7, md: 10, l: 15 }}>\r\n        <Tabs />\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default index\r\n","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/Tabs.js",["69","70","71"],"import React, { useEffect, useState } from 'react'\nimport axios from '../utils/axios'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\nimport StudentList from './StudentList'\nimport ClassesList from './ClassesList'\n\nconst AntTabs = withStyles({\n  root: {\n    borderBottom: '1px solid #e8e8e8',\n  },\n  indicator: {\n    backgroundColor: '#1890ff',\n  },\n})(Tabs)\n\nconst AntTab = withStyles((theme) => ({\n  root: {\n    textTransform: 'none',\n    minWidth: 72,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing(4),\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:hover': {\n      color: '#40a9ff',\n      opacity: 1,\n    },\n    '&$selected': {\n      color: '#1890ff',\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n    '&:focus': {\n      color: '#40a9ff',\n    },\n  },\n  selected: {},\n}))((props) => <Tab disableRipple {...props} />)\n\nconst StyledTabs = withStyles({\n  indicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    '& > span': {\n      maxWidth: 40,\n      width: '100%',\n      backgroundColor: '#635ee7',\n    },\n  },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />)\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    textTransform: 'none',\n    color: '#fff',\n    fontWeight: theme.typography.fontWeightRegular,\n    fontSize: theme.typography.pxToRem(15),\n    marginRight: theme.spacing(1),\n    '&:focus': {\n      opacity: 1,\n    },\n  },\n}))((props) => <Tab disableRipple {...props} />)\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  padding: {\n    padding: theme.spacing(3),\n  },\n  demo1: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  demo2: {\n    backgroundColor: '#2e1534',\n  },\n}))\n\nexport default function CustomizedTabs() {\n  const classes = useStyles()\n  const [subjectClasses, setSubjectClasses] = useState([])\n  const [students, setStudents] = useState([])\n  const [tabIndex, setTabIndex] = useState(0)\n  const tabsViews = [\n    <StudentList students={students} />,\n    <ClassesList subjectClasses={subjectClasses} />,\n  ]\n\n  const handleChange = (event, newValue) => {\n    setTabIndex(newValue)\n  }\n\n  useEffect(() => {\n    async function getAPIs() {\n      try {\n        const studentsResponse = await axios.get('/student')\n        setStudents(studentsResponse.data)\n        const classesResponse = await axios.get('/class')\n        setSubjectClasses(classesResponse.data)\n      } catch (error) {\n        console.log('ðŸš€ ~ file: index.js ~ line 56 ~ error', error)\n      }\n    }\n    getAPIs()\n    console.log('ðŸš€ ~ file: index.js ~ line 34 ~ response', students)\n    console.log('ðŸš€ ~ file: index.js ~ line 34 ~ response', subjectClasses)\n    return () => {\n      setStudents([])\n      setSubjectClasses([])\n    }\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.demo1}>\n        <AntTabs\n          value={tabIndex}\n          onChange={handleChange}\n          aria-label='ant example'>\n          <AntTab label='Students' />\n          <AntTab label='Classes' />\n        </AntTabs>\n        <Typography className={classes.padding} />\n      </div>\n      {tabsViews[tabIndex]}\n    </div>\n  )\n}\n","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/ClassesList.js",["72","73","74","75","76","77","78"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Button,\n  IconButton,\n  Tooltip,\n  FormControlLabel,\n  Switch,\n} from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport { useHistory } from 'react-router-dom'\n\nfunction createData(name, attended, missed) {\n  return { name, attended, missed }\n}\n\nconst rows1 = [createData('Class 1', 2, 0), createData('Class 2', 1, 0)]\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index])\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0])\n    if (order !== 0) return order\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map((el) => el[0])\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  { id: 'attended', numeric: true, disablePadding: false, label: 'Attended' },\n  { id: 'missed', numeric: true, disablePadding: false, label: 'Missed' },\n  { id: 'take attendance', numeric: false, disablePadding: false },\n]\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding='checkbox'></TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}>\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}>\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}))\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}>\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color='inherit'\n          variant='subtitle1'\n          component='div'>\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant='h6'\n          id='tableTitle'\n          component='div'>\n          Classes\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title='Delete'>\n          <IconButton aria-label='delete'>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title='Filter list'>\n          <IconButton aria-label='filter list'>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}))\n\nexport default function ClassesList({ subjectClasses }) {\n  console.log(\n    'ðŸš€ ~ file: ClassesList.js ~ line 211 ~ ClassesList ~ subjectClasses',\n    subjectClasses\n  )\n  const history = useHistory()\n  const classes = useStyles()\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [selected, setSelected] = React.useState([])\n  const [page, setPage] = React.useState(0)\n  const [dense, setDense] = React.useState(false)\n  const [rowsPerPage, setRowsPerPage] = React.useState(5)\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n  let rows = subjectClasses\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows1.map((n) => n.name)\n      setSelected(newSelecteds)\n      return\n    }\n    setSelected([])\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const isSelected = (name) => selected.indexOf(name) !== -1\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage)\n\n  return (\n    subjectClasses.length > 0 && (\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <EnhancedTableToolbar numSelected={selected.length} />\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby='tableTitle'\n              size={dense ? 'small' : 'medium'}\n              aria-label='enhanced table'>\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                //   onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rows.length}\n              />\n              <TableBody>\n                {stableSort(rows, getComparator(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row.name)\n                    const labelId = `enhanced-table-checkbox-${index}`\n\n                    return (\n                      <TableRow\n                        hover\n                        //   onClick={(event) => handleClick(event, row.name)}\n                        role='checkbox'\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.id}\n                        selected={isItemSelected}>\n                        <TableCell padding='checkbox'>\n                          {/* <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        /> */}\n                        </TableCell>\n                        <TableCell\n                          component='th'\n                          id={labelId}\n                          scope='row'\n                          padding='none'>\n                          {row.title}\n                        </TableCell>\n                        <TableCell align='right'>{row.attended}</TableCell>\n                        <TableCell align='right'>{row.missed}</TableCell>\n                        <TableCell align='right'>\n                          <Button\n                            onClick={() => history.push(`/class/${row.id}`)}\n                            style={{ textTransform: 'none' }}\n                            variant='contained'\n                            color='primary'>\n                            Take Attendance\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    )\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component='div'\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </div>\n    )\n  )\n}\n","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/StudentList.js",["79","80","81","82","83","84","85","86","87"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  IconButton,\n  Tooltip,\n  FormControlLabel,\n  Switch,\n} from '@material-ui/core/'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nfunction createData(name, attended, missed) {\n  return { name, attended, missed }\n}\n\nconst rows1 = [\n  createData('Rahaf Alenezi', 2, 4),\n  createData('Omar Alibrahim', 4, 2),\n]\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index])\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0])\n    if (order !== 0) return order\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map((el) => el[0])\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  { id: 'attended', numeric: true, disablePadding: false, label: 'Attended' },\n  { id: 'missed', numeric: true, disablePadding: false, label: 'Missed' },\n]\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding='checkbox'></TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}>\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}>\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}))\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}>\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color='inherit'\n          variant='subtitle1'\n          component='div'>\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant='h6'\n          id='tableTitle'\n          component='div'>\n          Students\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title='Delete'>\n          <IconButton aria-label='delete'>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title='Filter list'>\n          <IconButton aria-label='filter list'>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}))\n\nexport default function StudentList({ students }) {\n  console.log(\n    'ðŸš€ ~ file: StudentList.js ~ line 212 ~ StudentList ~ students',\n    students\n  )\n  const classes = useStyles()\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [selected, setSelected] = React.useState([])\n  const [page, setPage] = React.useState(0)\n  const [dense, setDense] = React.useState(false)\n  const [rowsPerPage, setRowsPerPage] = React.useState(5)\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const isSelected = (name) => selected.indexOf(name) !== -1\n  let rows = students\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage)\n\n  return (\n    students.length > 0 && (\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <EnhancedTableToolbar numSelected={selected.length} />\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby='tableTitle'\n              size={dense ? 'small' : 'medium'}\n              aria-label='enhanced table'>\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                //   onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rows.length}\n              />\n              <TableBody>\n                {stableSort(rows, getComparator(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row.name)\n                    const labelId = `enhanced-table-checkbox-${index}`\n\n                    return (\n                      <TableRow\n                        hover\n                        //   onClick={(event) => handleClick(event, row.name)}\n                        role='checkbox'\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.name}\n                        selected={isItemSelected}>\n                        <TableCell padding='checkbox'>\n                          {/* <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        /> */}\n                        </TableCell>\n                        <TableCell\n                          component='th'\n                          id={labelId}\n                          scope='row'\n                          padding='none'>\n                          {row.name}\n                        </TableCell>\n                        <TableCell align='right'>1{row.attended}</TableCell>\n                        <TableCell align='right'>0{row.missed}</TableCell>\n                      </TableRow>\n                    )\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component='div'\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </div>\n    )\n  )\n}\n","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/SubjectsGrid/SubjectsGrid.js",["88","89","90","91","92"],"import React, { useEffect, useState } from 'react'\nimport axios from '../../utils/axios'\nimport SubjectCard from '.'\nimport { Link as RouterLink } from 'react-router-dom'\nimport {\n  Grid,\n  Card,\n  CardMedia,\n  Link,\n  Typography,\n  colors,\n  makeStyles,\n} from '@material-ui/core'\n\nconst SubjectsGrid = () => {\n  const [spacing, setSpacing] = React.useState(2)\n  const classes = useStyles()\n\n  const [subjects, setSubjects] = useState([])\n\n  useEffect(() => {\n    async function getSubjects() {\n      try {\n        const response = await axios.get('/subject')\n        setSubjects(response.data)\n      } catch (error) {\n        console.log('ðŸš€ ~ file: index.js ~ line 56 ~ error', error)\n      }\n    }\n    getSubjects()\n    return () => {\n      setSubjects([])\n    }\n  }, [])\n\n  const handleChange = (event) => {\n    setSpacing(Number(event.target.value))\n  }\n\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justifyContent='center' spacing={spacing}>\n          {subjects.map((value) => (\n            <Link\n              key={value.id}\n              style={{ textDecoration: 'none' }}\n              color='textPrimary'\n              component={RouterLink}\n              to={`/subjects/${value.id}`}\n              variant='h5'>\n              <Grid key={value.id} item>\n                <SubjectCard\n                  key={value.id}\n                  title={value.title}\n                  subtitle={value.subtitle}\n                  color='#8F4CB8'\n                />\n              </Grid>\n            </Link>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default SubjectsGrid\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}))\n","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/SubjectsGrid/index.js",["93"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Box, Typography, Card } from '@material-ui/core'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    borderRadius: 23,\n  },\n})\n\nconst SubjectCard = ({ title, subtitle, color, numberOfStudents = 0 }) => {\n  const classes = useStyles()\n\n  return (\n    <Box m={2}>\n      <Card className={classes.root}>\n        {/* <CardActionArea> */}\n        {/* <CardContent> */}\n        <Box\n          bgcolor={color}\n          height={110}\n          px={5}\n          py={2}\n          width={450}\n          color='white'>\n          <Typography gutterBottom variant='h4' component='h2'>\n            {title}\n          </Typography>\n          <Box my={-2}>\n            <Typography variant='h6' component='p'>\n              {subtitle}\n            </Typography>\n          </Box>\n        </Box>\n\n        <Box bgcolor='white' height={120} m={-5} width={450} color='white' />\n        <Box px={5} mt={-12} pb={4}>\n          <Typography variant='body4' color='secondary' component='p'>\n            {numberOfStudents} students\n          </Typography>\n        </Box>\n      </Card>\n    </Box>\n  )\n}\n\nexport default SubjectCard\n","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/ClassView/index.js",["94","95","96","97","98","99","100","101","102","103"],"import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Button,\n  IconButton,\n  Tooltip,\n  FormControlLabel,\n  Checkbox,\n  Box,\n  Dialog,\n  DialogContent,\n} from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport { useHistory, useParams } from 'react-router-dom'\nimport AttendanceModal from './AttendanceModal'\nimport axios from '../../utils/axios'\n\nfunction createData(name, attended) {\n  return { name, attended }\n}\n\nconst rows1 = [createData('Rahaf Alenezi'), createData('Omar Alibrahim')]\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index])\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0])\n    if (order !== 0) return order\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map((el) => el[0])\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  { id: 'attended', numeric: true, disablePadding: false, label: 'Attended' },\n]\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding='checkbox'></TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'center' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}>\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}>\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}))\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}>\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color='inherit'\n          variant='subtitle1'\n          component='div'>\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <>\n          <Typography\n            className={classes.title}\n            variant='h6'\n            id='tableTitle'\n            component='div'>\n            Class ID or Title\n          </Typography>\n        </>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title='Delete'>\n          <IconButton aria-label='delete'>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title='Filter list'>\n          <IconButton aria-label='filter list'>\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}))\n\nexport default function ClassView() {\n  const { classId } = useParams()\n  console.log('ðŸš€ ~ file: index.js ~ line 217 ~ ClassView ~ id', classId)\n  const [students, setStudents] = useState([])\n  const history = useHistory()\n  const classes = useStyles()\n  let initialCheckedValues = {}\n  const rows = rows1\n  rows.length > 0 && rows.map((row) => (initialCheckedValues[row.id] = false))\n  const [checked, setChecked] = React.useState(initialCheckedValues)\n\n  const [open, setOpen] = React.useState(false)\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('calories')\n  const [selected, setSelected] = React.useState([])\n  const [page, setPage] = React.useState(0)\n  const [dense, setDense] = React.useState(false)\n  const [rowsPerPage, setRowsPerPage] = React.useState(5)\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name)\n      setSelected(newSelecteds)\n      return\n    }\n    setSelected([])\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n  const handleChange = async (event) => {\n    console.log(\n      'ðŸš€ ~ file: index.js ~ line 241 ~ handleChange ~ event',\n\n      event.target.id\n    )\n\n    setChecked({ ...checked, [event.target.id]: event.target.checked })\n\n    try {\n      const response = await axios.post('/attendance', {\n        studentId: event.target.id,\n        classId,\n      })\n    } catch (error) {\n      console.log(\n        'ðŸš€ ~ file: index.js ~ line 287 ~ handleChange ~ error',\n        error\n      )\n    }\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  //   post('/createsession')\n\n  const handleStartSession = async () => {\n    try {\n      const createSessionResponse = await axios.post(\n        '/attendance/createsession',\n        {\n          classId,\n        }\n      )\n      console.log(\n        'ðŸš€ ~ file: index.js ~ line 294 ~ handleStartSession ~ createSessionResponse',\n        createSessionResponse\n      )\n    } catch (error) {\n      console.log(\n        'ðŸš€ ~ file: index.js ~ line 302 ~ handleStartSession ~ error',\n        error\n      )\n    }\n\n    // handleClickOpen({\n    //   classSecret: createSessionResponse.data.session.createSessionResponse,\n    //   classId,\n    //   sessionId: id.createSessionResponse.data.session,\n    // })\n  }\n\n  useEffect(() => {\n    async function getAPIs() {\n      try {\n        const studentsResponse = await axios.get('/attendance')\n        setStudents(studentsResponse.data)\n        console.log(\n          'ðŸš€ ~ file: index.js ~ line 34 ~ response',\n          studentsResponse.data\n        )\n      } catch (error) {\n        console.log('ðŸš€ ~ file: index.js ~ line 56 ~ error', error)\n      }\n      //\n      try {\n        const studentsResponse = await axios.get('/student')\n        // const attendance =\n        setStudents(studentsResponse.data)\n        console.log(\n          'ðŸš€ ~ file: index.js ~ line 34 ~ response',\n          studentsResponse.data\n        )\n      } catch (error) {\n        console.log('ðŸš€ ~ file: index.js ~ line 309 ~ getAPIs ~ error', error)\n        console.log('ðŸš€ ~ file: index.js ~ line 56 ~ error', error)\n      }\n    }\n    getAPIs()\n    return () => {\n      setStudents([])\n    }\n  }, [])\n\n  const isSelected = (name) => selected.indexOf(name) !== -1\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage)\n\n  return (\n    rows1.length > 0 && (\n      <div className={classes.root}>\n        <Dialog maxWidth='sm' fullWidth open={open} onClose={handleClose}>\n          <DialogContent>\n            <AttendanceModal classId={classId} closeModal={handleClose} />\n          </DialogContent>\n        </Dialog>\n        <Paper className={classes.paper}>\n          <EnhancedTableToolbar numSelected={selected.length} />\n          <Box ml={2}>\n            <Button\n              onClick={handleClickOpen}\n              style={{ textTransform: 'none' }}\n              variant='contained'\n              color='primary'>\n              Open Session\n            </Button>\n          </Box>\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby='tableTitle'\n              size={dense ? 'small' : 'medium'}\n              aria-label='enhanced table'>\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                //   onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rows.length}\n              />\n\n              <TableBody>\n                {stableSort(rows, getComparator(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row.name)\n                    const labelId = `enhanced-table-checkbox-${index}`\n\n                    return (\n                      <TableRow\n                        hover\n                        //   onClick={(event) => handleClick(event, row.name)}\n                        role='checkbox'\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.name}\n                        selected={isItemSelected}>\n                        <TableCell padding='checkbox'>\n                          {/* <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        /> */}\n                        </TableCell>\n                        <TableCell\n                          component='th'\n                          id={labelId}\n                          scope='row'\n                          padding='none'>\n                          {row.name}\n                        </TableCell>\n                        <TableCell align='center'>\n                          {' '}\n                          <Checkbox\n                            id={`${row.id}`}\n                            checked={checked[row.id] || false}\n                            onChange={handleChange}\n                          />\n                        </TableCell>\n                      </TableRow>\n                    )\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component='div'\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </div>\n    )\n  )\n}\n","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/components/ClassView/AttendanceModal.js",["104","105","106","107"],"import { Box, Button, Typography } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { io } from 'socket.io-client'\nimport axios from '../../utils/axios'\n\nconst AttendanceModal = ({ classId, closeModal }) => {\n  const [students, setStudents] = useState([])\n  const [session, setSession] = useState({\n    classSecret: 0,\n    classId: 0,\n    sessionId: 0,\n  })\n  let classSecret, sessionId\n\n  const handleSessionEnd = async (sessionId) => {\n    try {\n      const endSessionResponse = await axios.post(\n        `/attendance/terminatesession/${sessionId}`\n      )\n\n      closeModal()\n    } catch (error) {\n      console.log(\n        'ðŸš€ ~ file: AttendanceModal.js ~ line 27 ~ handleSessionEnd ~ error',\n        error\n      )\n    }\n  }\n\n  const socket = io('http://localhost:8001', {})\n\n  useEffect(() => {\n    socket.on('newStudent', (data) => {\n      console.log(\n        'ðŸš€ ~ file: AttendanceModal.js ~ line 34 ~ socket.on ~ data',\n        data\n      )\n      setStudents([...students, data.name])\n    })\n  }, [socket])\n\n  useEffect(() => {\n    const handleStartSession = async () => {\n      try {\n        const createSessionResponse = await axios.post(\n          '/attendance/createsession',\n          {\n            classId,\n          }\n        )\n        console.log(\n          'ðŸš€ ~ file: index.js ~ line 294 ~ handleStartSession ~ createSessionResponse',\n          createSessionResponse.data\n        )\n        setSession({\n          classSecret: createSessionResponse.data.session.classSecret,\n          classId,\n          sessionId: createSessionResponse.data.session.id,\n        })\n        classSecret = createSessionResponse.data.session.classSecret\n        sessionId = createSessionResponse.data.session.id\n        console.log(classSecret, classId, sessionId)\n      } catch (error) {\n        console.log(\n          'ðŸš€ ~ file: index.js ~ line 302 ~ handleStartSession ~ error',\n          error\n        )\n      }\n    }\n\n    handleStartSession()\n\n    return () => {\n      handleSessionEnd(sessionId)\n    }\n  }, [])\n\n  console.log(\n    'ðŸš€ ~ file: AttendanceModal.js ~ line 8 ~ AttendanceModal ~ students',\n    students\n  )\n\n  return (\n    <Box\n      display='flex'\n      flexDirection='column'\n      justifyContent='center'\n      alignItems='center'\n      height='520px'>\n      <Typography variant='h1'>{session.classSecret}</Typography>\n      <Box m={3}>\n        <Typography variant='h5'>Type this class session ID</Typography>\n      </Box>\n\n      <Typography variant='p'>{students.join(', ')}</Typography>\n\n      <Button\n        onClick={() => handleSessionEnd(session.sessionId)}\n        style={{ textTransform: 'none' }}\n        variant='contained'\n        color='secondary'>\n        Turn off session\n      </Button>\n    </Box>\n  )\n}\n\nexport default AttendanceModal\n","/Users/rahaf/Developement/mini_hackathon/mawjood/mawjood_fe/src/utils/axios.js",[],{"ruleId":"108","severity":1,"message":"109","line":7,"column":8,"nodeType":"110","messageId":"111","endLine":7,"endColumn":18},{"ruleId":"108","severity":1,"message":"112","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":16},{"ruleId":"108","severity":1,"message":"113","line":9,"column":10,"nodeType":"110","messageId":"111","endLine":9,"endColumn":14},{"ruleId":"108","severity":1,"message":"114","line":9,"column":16,"nodeType":"110","messageId":"111","endLine":9,"endColumn":19},{"ruleId":"108","severity":1,"message":"115","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"116","line":3,"column":15,"nodeType":"110","messageId":"111","endLine":3,"endColumn":21},{"ruleId":"108","severity":1,"message":"117","line":52,"column":7,"nodeType":"110","messageId":"111","endLine":52,"endColumn":17},{"ruleId":"108","severity":1,"message":"118","line":65,"column":7,"nodeType":"110","messageId":"111","endLine":65,"endColumn":16},{"ruleId":"119","severity":1,"message":"120","line":125,"column":6,"nodeType":"121","endLine":125,"endColumn":8,"suggestions":"122"},{"ruleId":"108","severity":1,"message":"123","line":20,"column":3,"nodeType":"110","messageId":"111","endLine":20,"endColumn":19},{"ruleId":"108","severity":1,"message":"124","line":21,"column":3,"nodeType":"110","messageId":"111","endLine":21,"endColumn":9},{"ruleId":"108","severity":1,"message":"125","line":69,"column":5,"nodeType":"110","messageId":"111","endLine":69,"endColumn":21},{"ruleId":"108","severity":1,"message":"126","line":72,"column":5,"nodeType":"110","messageId":"111","endLine":72,"endColumn":16},{"ruleId":"108","severity":1,"message":"127","line":73,"column":5,"nodeType":"110","messageId":"111","endLine":73,"endColumn":13},{"ruleId":"108","severity":1,"message":"128","line":221,"column":17,"nodeType":"110","messageId":"111","endLine":221,"endColumn":25},{"ruleId":"108","severity":1,"message":"129","line":230,"column":9,"nodeType":"110","messageId":"111","endLine":230,"endColumn":29},{"ruleId":"108","severity":1,"message":"130","line":17,"column":3,"nodeType":"110","messageId":"111","endLine":17,"endColumn":11},{"ruleId":"108","severity":1,"message":"123","line":20,"column":3,"nodeType":"110","messageId":"111","endLine":20,"endColumn":19},{"ruleId":"108","severity":1,"message":"124","line":21,"column":3,"nodeType":"110","messageId":"111","endLine":21,"endColumn":9},{"ruleId":"108","severity":1,"message":"131","line":30,"column":7,"nodeType":"110","messageId":"111","endLine":30,"endColumn":12},{"ruleId":"108","severity":1,"message":"125","line":70,"column":5,"nodeType":"110","messageId":"111","endLine":70,"endColumn":21},{"ruleId":"108","severity":1,"message":"126","line":73,"column":5,"nodeType":"110","messageId":"111","endLine":73,"endColumn":16},{"ruleId":"108","severity":1,"message":"127","line":74,"column":5,"nodeType":"110","messageId":"111","endLine":74,"endColumn":13},{"ruleId":"108","severity":1,"message":"132","line":219,"column":20,"nodeType":"110","messageId":"111","endLine":219,"endColumn":31},{"ruleId":"108","severity":1,"message":"128","line":221,"column":17,"nodeType":"110","messageId":"111","endLine":221,"endColumn":25},{"ruleId":"108","severity":1,"message":"133","line":7,"column":3,"nodeType":"110","messageId":"111","endLine":7,"endColumn":7},{"ruleId":"108","severity":1,"message":"134","line":8,"column":3,"nodeType":"110","messageId":"111","endLine":8,"endColumn":12},{"ruleId":"108","severity":1,"message":"135","line":10,"column":3,"nodeType":"110","messageId":"111","endLine":10,"endColumn":13},{"ruleId":"108","severity":1,"message":"136","line":11,"column":3,"nodeType":"110","messageId":"111","endLine":11,"endColumn":9},{"ruleId":"108","severity":1,"message":"137","line":36,"column":9,"nodeType":"110","messageId":"111","endLine":36,"endColumn":21},{"ruleId":"108","severity":1,"message":"138","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":20},{"ruleId":"108","severity":1,"message":"123","line":20,"column":3,"nodeType":"110","messageId":"111","endLine":20,"endColumn":19},{"ruleId":"108","severity":1,"message":"125","line":72,"column":5,"nodeType":"110","messageId":"111","endLine":72,"endColumn":21},{"ruleId":"108","severity":1,"message":"126","line":75,"column":5,"nodeType":"110","messageId":"111","endLine":75,"endColumn":16},{"ruleId":"108","severity":1,"message":"127","line":76,"column":5,"nodeType":"110","messageId":"111","endLine":76,"endColumn":13},{"ruleId":"108","severity":1,"message":"139","line":218,"column":10,"nodeType":"110","messageId":"111","endLine":218,"endColumn":18},{"ruleId":"108","severity":1,"message":"140","line":219,"column":9,"nodeType":"110","messageId":"111","endLine":219,"endColumn":16},{"ruleId":"108","severity":1,"message":"128","line":231,"column":17,"nodeType":"110","messageId":"111","endLine":231,"endColumn":25},{"ruleId":"108","severity":1,"message":"129","line":240,"column":9,"nodeType":"110","messageId":"111","endLine":240,"endColumn":29},{"ruleId":"108","severity":1,"message":"141","line":262,"column":13,"nodeType":"110","messageId":"111","endLine":262,"endColumn":21},{"ruleId":"108","severity":1,"message":"142","line":289,"column":9,"nodeType":"110","messageId":"111","endLine":289,"endColumn":27},{"ruleId":"108","severity":1,"message":"143","line":17,"column":13,"nodeType":"110","messageId":"111","endLine":17,"endColumn":31},{"ruleId":"119","severity":1,"message":"144","line":40,"column":6,"nodeType":"121","endLine":40,"endColumn":14,"suggestions":"145"},{"ruleId":"119","severity":1,"message":"146","line":60,"column":23,"nodeType":"147","endLine":60,"endColumn":69},{"ruleId":"119","severity":1,"message":"148","line":61,"column":21,"nodeType":"147","endLine":61,"endColumn":58},"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'MenuIcon' is defined but never used.","'Link' is defined but never used.","'Tab' is defined but never used.","'AppBar' is defined but never used.","'Button' is defined but never used.","'StyledTabs' is assigned a value but never used.","'StyledTab' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'students' and 'subjectClasses'. Either include them or remove the dependency array.","ArrayExpression",["149"],"'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'setDense' is assigned a value but never used.","'handleSelectAllClick' is assigned a value but never used.","'Checkbox' is defined but never used.","'rows1' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'Card' is defined but never used.","'CardMedia' is defined but never used.","'Typography' is defined but never used.","'colors' is defined but never used.","'handleChange' is assigned a value but never used.","'MoreVertIcon' is defined but never used.","'students' is assigned a value but never used.","'history' is assigned a value but never used.","'response' is assigned a value but never used.","'handleStartSession' is assigned a value but never used.","'endSessionResponse' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'students'. Either include it or remove the dependency array. You can also do a functional update 'setStudents(s => ...)' if you only need 'students' in the 'setStudents' call.",["150"],"Assignments to the 'classSecret' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'sessionId' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [students, subjectClasses]",{"range":"155","text":"156"},"Update the dependencies array to be: [socket, students]",{"range":"157","text":"158"},[3183,3185],"[students, subjectClasses]",[1041,1049],"[socket, students]"]